// Generated by Apple Swift version 4.2.1 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import Charts;
@import CoreGraphics;
@import ObjectiveC;
@import React;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Demo",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSCoder;
@class ChartDataEntry;
@class ChartHighlight;

SWIFT_CLASS("_TtC4Demo13BalloonMarker")
@interface BalloonMarker : ChartMarkerView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawWithContext:(CGContextRef _Nonnull)context point:(CGPoint)point;
- (void)refreshContentWithEntry:(ChartDataEntry * _Nonnull)entry highlight:(ChartHighlight * _Nonnull)highlight;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC4Demo23ChartDataSetConfigUtils")
@interface ChartDataSetConfigUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ChartAxisBase;
@class ChartViewPortHandler;

SWIFT_CLASS("_TtC4Demo18ChartDateFormatter")
@interface ChartDateFormatter : NSObject <IChartAxisValueFormatter, IChartValueFormatter>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)stringForValue:(double)value axis:(ChartAxisBase * _Nullable)axis SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)stringForValue:(double)value entry:(ChartDataEntry * _Nonnull)entry dataSetIndex:(NSInteger)dataSetIndex viewPortHandler:(ChartViewPortHandler * _Nullable)viewPortHandler SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC4Demo24CustomChartDateFormatter")
@interface CustomChartDateFormatter : NSObject <IChartAxisValueFormatter, IChartValueFormatter>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)stringForValue:(double)value axis:(ChartAxisBase * _Nullable)axis SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)stringForValue:(double)value entry:(ChartDataEntry * _Nonnull)entry dataSetIndex:(NSInteger)dataSetIndex viewPortHandler:(ChartViewPortHandler * _Nullable)viewPortHandler SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC4Demo22EntryToDictionaryUtils")
@interface EntryToDictionaryUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC4Demo19IndexValueFormatter")
@interface IndexValueFormatter : NSObject <IChartValueFormatter>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValues:(NSArray<NSString *> * _Nonnull)values OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)stringForValue:(double)value entry:(ChartDataEntry * _Nonnull)entry dataSetIndex:(NSInteger)dataSetIndex viewPortHandler:(ChartViewPortHandler * _Nullable)viewPortHandler SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC4Demo19LargeValueFormatter")
@interface LargeValueFormatter : NSObject <IChartAxisValueFormatter, IChartValueFormatter>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)stringForValue:(double)value axis:(ChartAxisBase * _Nullable)axis SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)stringForValue:(double)value entry:(ChartDataEntry * _Nonnull)entry dataSetIndex:(NSInteger)dataSetIndex viewPortHandler:(ChartViewPortHandler * _Nullable)viewPortHandler SWIFT_WARN_UNUSED_RESULT;
@end

@class RCTBridge;
@class UIView;
@class NSNumber;
@class NSString;
@class NSArray;
@class NSDictionary;

SWIFT_CLASS_NAMED("RNBarChartManager")
@interface RNBarChartManager : RCTViewManager
@property (nonatomic, readonly, strong) RCTBridge * _Nullable _bridge;
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (void)moveViewToX:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue;
- (void)moveViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)moveViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)centerViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)centerViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)fitScreen:(NSNumber * _Nonnull)reactTag;
- (void)highlights:(NSNumber * _Nonnull)reactTag config:(NSArray * _Nonnull)config;
- (void)setDataAndLockIndex:(NSNumber * _Nonnull)reactTag data:(NSDictionary * _Nonnull)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ChartViewBase;

SWIFT_CLASS("_TtC4Demo15RNChartViewBase")
@interface RNChartViewBase : UIView <ChartViewDelegate>
@property (nonatomic, copy) RCTBubblingEventBlock _Nullable onSelect;
@property (nonatomic, copy) RCTBubblingEventBlock _Nullable onChange;
- (void)reactSetFrame:(CGRect)frame;
@property (nonatomic, readonly, strong) ChartViewBase * _Nonnull chart;
- (void)setData:(NSDictionary * _Nonnull)data;
- (void)setLegend:(NSDictionary * _Nonnull)config;
- (void)setChartBackgroundColor:(NSInteger)backgroundColor;
- (void)setChartDescription:(NSDictionary * _Nonnull)config;
- (void)setNoDataText:(NSString * _Nonnull)noDataText;
- (void)setTouchEnabled:(BOOL)touchEnabled;
- (void)setHighlightPerTapEnabled:(BOOL)enabled;
- (void)setDragDecelerationEnabled:(BOOL)dragDecelerationEnabled;
- (void)setDragDecelerationFrictionCoef:(NSNumber * _Nonnull)dragDecelerationFrictionCoef;
- (void)setAnimation:(NSDictionary * _Nonnull)config;
- (void)setXAxis:(NSDictionary * _Nonnull)config;
- (void)setMarker:(NSDictionary * _Nonnull)config;
- (void)setHighlights:(NSArray * _Nonnull)config;
- (void)chartValueSelected:(ChartViewBase * _Nonnull)chartView entry:(ChartDataEntry * _Nonnull)entry highlight:(ChartHighlight * _Nonnull)highlight;
- (void)chartValueNothingSelected:(ChartViewBase * _Nonnull)chartView;
- (void)chartScaled:(ChartViewBase * _Nonnull)chartView scaleX:(CGFloat)scaleX scaleY:(CGFloat)scaleY;
- (void)chartTranslated:(ChartViewBase * _Nonnull)chartView dX:(CGFloat)dX dY:(CGFloat)dY;
- (void)sendEvent:(NSString * _Nonnull)action;
- (void)setGroup:(NSString * _Nonnull)group;
- (void)setIdentifier:(NSString * _Nonnull)identifier;
- (void)setSyncX:(BOOL)syncX;
- (void)setSyncY:(BOOL)syncY;
- (void)onAfterDataSetChanged;
- (void)didSetProps:(NSArray<NSString *> * _Null_unspecified)changedProps;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC4Demo20RNYAxisChartViewBase")
@interface RNYAxisChartViewBase : RNChartViewBase
- (void)setYAxis:(NSDictionary * _Nonnull)config;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC4Demo22RNBarLineChartViewBase")
@interface RNBarLineChartViewBase : RNYAxisChartViewBase
@property (nonatomic, strong) NSDictionary * _Nullable savedVisibleRange;
@property (nonatomic, strong) NSDictionary * _Nullable savedZoom;
- (void)setYAxis:(NSDictionary * _Nonnull)config;
- (void)setDrawGridBackground:(BOOL)enabled;
- (void)setGridBackgroundColor:(NSInteger)color;
- (void)setDrawBorders:(BOOL)enabled;
- (void)setBorderColor:(NSInteger)color;
- (void)setBorderWidth:(CGFloat)width;
- (void)setMaxVisibleValueCount:(NSInteger)count;
- (void)setVisibleRange:(NSDictionary * _Nonnull)config;
- (void)updateVisibleRange:(NSDictionary * _Nonnull)config;
- (void)setAutoScaleMinMaxEnabled:(BOOL)enabled;
- (void)setKeepPositionOnRotation:(BOOL)enabled;
- (void)setScaleEnabled:(BOOL)enabled;
- (void)setDragEnabled:(BOOL)enabled;
- (void)setScaleXEnabled:(BOOL)enabled;
- (void)setScaleYEnabled:(BOOL)enabled;
- (void)setPinchZoom:(BOOL)enabled;
- (void)setHighlightPerDragEnabled:(BOOL)enabled;
- (void)setDoubleTapToZoomEnabled:(BOOL)enabled;
- (void)setZoom:(NSDictionary * _Nonnull)config;
- (void)updateZoom:(NSDictionary * _Nonnull)config;
- (void)setViewPortOffsets:(NSDictionary * _Nonnull)config;
- (void)setExtraOffsets:(NSDictionary * _Nonnull)config;
- (void)onAfterDataSetChanged;
- (void)setDataAndLockIndex:(NSDictionary * _Nonnull)data;
- (CGFloat)getVisibleYRange:(enum AxisDependency)axis SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC4Demo18RNBarChartViewBase")
@interface RNBarChartViewBase : RNBarLineChartViewBase
- (void)setDrawValueAboveBar:(BOOL)enabled;
- (void)setDrawBarShadow:(BOOL)enabled;
- (void)setHighlightFullBarEnabled:(BOOL)enabled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class BarChartView;

SWIFT_CLASS("_TtC4Demo14RNBarChartView")
@interface RNBarChartView : RNBarChartViewBase
@property (nonatomic, readonly, strong) BarChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) BarChartView * _Nonnull chart;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS_NAMED("RNBubbleChartManager")
@interface RNBubbleChartManager : RCTViewManager
@property (nonatomic, readonly, strong) RCTBridge * _Nullable _bridge;
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (void)moveViewToX:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue;
- (void)moveViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)moveViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)centerViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)centerViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)fitScreen:(NSNumber * _Nonnull)reactTag;
- (void)highlights:(NSNumber * _Nonnull)reactTag config:(NSArray * _Nonnull)config;
- (void)setDataAndLockIndex:(NSNumber * _Nonnull)reactTag data:(NSDictionary * _Nonnull)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class BubbleChartView;

SWIFT_CLASS("_TtC4Demo17RNBubbleChartView")
@interface RNBubbleChartView : RNBarLineChartViewBase
@property (nonatomic, readonly, strong) BubbleChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) BubbleChartView * _Nonnull chart;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RNCandleStickChartManager")
@interface RNCandleStickChartManager : RCTViewManager
@property (nonatomic, readonly, strong) RCTBridge * _Nullable _bridge;
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (void)moveViewToX:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue;
- (void)moveViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)moveViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)centerViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)centerViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)fitScreen:(NSNumber * _Nonnull)reactTag;
- (void)highlights:(NSNumber * _Nonnull)reactTag config:(NSArray * _Nonnull)config;
- (void)setDataAndLockIndex:(NSNumber * _Nonnull)reactTag data:(NSDictionary * _Nonnull)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CandleStickChartView;

SWIFT_CLASS("_TtC4Demo22RNCandleStickChartView")
@interface RNCandleStickChartView : RNBarLineChartViewBase
@property (nonatomic, readonly, strong) CandleStickChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) ChartViewBase * _Nonnull chart;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS_NAMED("RNCombinedChartManager")
@interface RNCombinedChartManager : RCTViewManager
@property (nonatomic, readonly, strong) RCTBridge * _Nullable _bridge;
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (void)moveViewToX:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue;
- (void)moveViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)moveViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)centerViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)centerViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)fitScreen:(NSNumber * _Nonnull)reactTag;
- (void)highlights:(NSNumber * _Nonnull)reactTag config:(NSArray * _Nonnull)config;
- (void)setDataAndLockIndex:(NSNumber * _Nonnull)reactTag data:(NSDictionary * _Nonnull)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class CombinedChartView;

SWIFT_CLASS("_TtC4Demo19RNCombinedChartView")
@interface RNCombinedChartView : RNBarLineChartViewBase
@property (nonatomic, readonly, strong) CombinedChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) CombinedChartView * _Nonnull chart;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setDrawValueAboveBar:(BOOL)enabled;
- (void)setDrawBarShadow:(BOOL)enabled;
- (void)setHighlightFullBarEnabled:(BOOL)enabled;
@end


SWIFT_CLASS_NAMED("RNHorizontalBarChartManager")
@interface RNHorizontalBarChartManager : RCTViewManager
@property (nonatomic, readonly, strong) RCTBridge * _Nullable _bridge;
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (void)moveViewToX:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue;
- (void)moveViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)moveViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)centerViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)centerViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)fitScreen:(NSNumber * _Nonnull)reactTag;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class HorizontalBarChartView;

SWIFT_CLASS("_TtC4Demo24RNHorizontalBarChartView")
@interface RNHorizontalBarChartView : RNBarChartViewBase
@property (nonatomic, readonly, strong) HorizontalBarChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) HorizontalBarChartView * _Nonnull chart;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RNLineChartManager")
@interface RNLineChartManager : RCTViewManager
@property (nonatomic, readonly, strong) RCTBridge * _Nullable _bridge;
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (void)moveViewToX:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue;
- (void)moveViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)moveViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)centerViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)centerViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)fitScreen:(NSNumber * _Nonnull)reactTag;
- (void)highlights:(NSNumber * _Nonnull)reactTag config:(NSArray * _Nonnull)config;
- (void)setDataAndLockIndex:(NSNumber * _Nonnull)reactTag data:(NSDictionary * _Nonnull)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LineChartView;

SWIFT_CLASS("_TtC4Demo15RNLineChartView")
@interface RNLineChartView : RNBarLineChartViewBase
@property (nonatomic, readonly, strong) LineChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) LineChartView * _Nonnull chart;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("RNPieChartManager")
@interface RNPieChartManager : RCTViewManager
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PieChartView;

SWIFT_CLASS("_TtC4Demo14RNPieChartView")
@interface RNPieChartView : RNChartViewBase
@property (nonatomic, readonly, strong) PieChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) PieChartView * _Nonnull chart;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setDrawSliceText:(BOOL)enabled;
- (void)setUsePercentValues:(BOOL)enabled;
- (void)setCenterText:(NSString * _Nonnull)text;
- (void)setStyledCenterText:(NSDictionary * _Nonnull)data;
- (void)setCenterTextRadiusPercent:(NSNumber * _Nonnull)radiusPercent;
- (void)setHoleRadius:(NSNumber * _Nonnull)percent;
- (void)setHoleColor:(NSInteger)color;
- (void)setTransparentCircleRadius:(NSNumber * _Nonnull)percent;
- (void)setTransparentCircleColor:(NSInteger)color;
- (void)setEntryLabelColor:(NSInteger)color;
- (void)setEntryLabelTextSize:(NSNumber * _Nonnull)size;
- (void)setDrawEntryLabels:(BOOL)enabled;
- (void)setMaxAngle:(NSNumber * _Nonnull)maxAngle;
- (void)setMinOffset:(NSNumber * _Nonnull)minOffset;
- (void)setRotationEnabled:(BOOL)enabled;
- (void)setRotationAngle:(NSNumber * _Nonnull)angle;
- (void)didSetProps:(NSArray<NSString *> * _Null_unspecified)changedProps;
@end


SWIFT_CLASS_NAMED("RNRadarChartManager")
@interface RNRadarChartManager : RCTViewManager
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RadarChartView;

SWIFT_CLASS("_TtC4Demo16RNRadarChartView")
@interface RNRadarChartView : RNYAxisChartViewBase
@property (nonatomic, readonly, strong) RadarChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) RadarChartView * _Nonnull chart;
- (void)setYAxis:(NSDictionary * _Nonnull)config;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)setSkipWebLineCount:(NSInteger)count;
- (void)setMinOffset:(NSNumber * _Nonnull)minOffset;
- (void)setRotationEnabled:(BOOL)enabled;
- (void)setRotationAngle:(NSNumber * _Nonnull)angle;
- (void)setDrawWeb:(BOOL)enabled;
- (void)setWebLineWidth:(NSNumber * _Nonnull)width;
- (void)setWebLineWidthInner:(NSNumber * _Nonnull)width;
- (void)setWebAlpha:(NSNumber * _Nonnull)alpha;
- (void)setWebColor:(NSNumber * _Nonnull)color;
- (void)setWebColorInner:(NSNumber * _Nonnull)color;
@end


SWIFT_CLASS_NAMED("RNScatterChartManager")
@interface RNScatterChartManager : RCTViewManager
@property (nonatomic, readonly, strong) RCTBridge * _Nullable _bridge;
- (UIView * _Null_unspecified)view SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)requiresMainQueueSetup SWIFT_WARN_UNUSED_RESULT;
- (void)moveViewToX:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue;
- (void)moveViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)moveViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)centerViewTo:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency;
- (void)centerViewToAnimated:(NSNumber * _Nonnull)reactTag xValue:(NSNumber * _Nonnull)xValue yValue:(NSNumber * _Nonnull)yValue axisDependency:(NSString * _Nonnull)axisDependency duration:(NSNumber * _Nonnull)duration;
- (void)fitScreen:(NSNumber * _Nonnull)reactTag;
- (void)highlights:(NSNumber * _Nonnull)reactTag config:(NSArray * _Nonnull)config;
- (void)setDataAndLockIndex:(NSNumber * _Nonnull)reactTag data:(NSDictionary * _Nonnull)data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ScatterChartView;

SWIFT_CLASS("_TtC4Demo18RNScatterChartView")
@interface RNScatterChartView : RNBarLineChartViewBase
@property (nonatomic, readonly, strong) ScatterChartView * _Nonnull _chart;
@property (nonatomic, readonly, strong) ScatterChartView * _Nonnull chart;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
